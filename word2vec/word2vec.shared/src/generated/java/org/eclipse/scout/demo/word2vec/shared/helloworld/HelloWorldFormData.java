package org.eclipse.scout.demo.word2vec.shared.helloworld;

import java.math.BigDecimal;

import javax.annotation.Generated;

import org.eclipse.scout.rt.shared.data.basic.table.AbstractTableRowData;
import org.eclipse.scout.rt.shared.data.form.AbstractFormData;
import org.eclipse.scout.rt.shared.data.form.fields.AbstractValueFieldData;
import org.eclipse.scout.rt.shared.data.form.fields.tablefield.AbstractTableFieldBeanData;

/**
 * <b>NOTE:</b><br>
 * This class is auto generated by the Scout SDK. No manual modifications
 * recommended.
 */
@Generated(value = "org.eclipse.scout.demo.word2vec.client.helloworld.HelloWorldForm", comments = "This class is auto generated by the Scout SDK. No manual modifications recommended.")
public class HelloWorldFormData extends AbstractFormData {

	private static final long serialVersionUID = 1L;

	public InVocabulary getInVocabulary() {
		return getFieldByClass(InVocabulary.class);
	}

	public NearestWords getNearestWords() {
		return getFieldByClass(NearestWords.class);
	}

	public Top getTop() {
		return getFieldByClass(Top.class);
	}

	public Word getWord() {
		return getFieldByClass(Word.class);
	}

	public static class InVocabulary extends AbstractValueFieldData<Boolean> {

		private static final long serialVersionUID = 1L;
	}

	public static class NearestWords extends AbstractTableFieldBeanData {

		private static final long serialVersionUID = 1L;

		@Override
		public NearestWordsRowData addRow() {
			return (NearestWordsRowData) super.addRow();
		}

		@Override
		public NearestWordsRowData addRow(int rowState) {
			return (NearestWordsRowData) super.addRow(rowState);
		}

		@Override
		public NearestWordsRowData createRow() {
			return new NearestWordsRowData();
		}

		@Override
		public Class<? extends AbstractTableRowData> getRowType() {
			return NearestWordsRowData.class;
		}

		@Override
		public NearestWordsRowData[] getRows() {
			return (NearestWordsRowData[]) super.getRows();
		}

		@Override
		public NearestWordsRowData rowAt(int index) {
			return (NearestWordsRowData) super.rowAt(index);
		}

		public void setRows(NearestWordsRowData[] rows) {
			super.setRows(rows);
		}

		public static class NearestWordsRowData extends AbstractTableRowData {

			private static final long serialVersionUID = 1L;
			public static final String word = "word";
			public static final String similarity = "similarity";
			private String m_word;
			private BigDecimal m_similarity;

			public String getWord() {
				return m_word;
			}

			public void setWord(String newWord) {
				m_word = newWord;
			}

			public BigDecimal getSimilarity() {
				return m_similarity;
			}

			public void setSimilarity(BigDecimal newSimilarity) {
				m_similarity = newSimilarity;
			}
		}
	}

	public static class Top extends AbstractValueFieldData<Long> {

		private static final long serialVersionUID = 1L;
	}

	public static class Word extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}
}
